/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DemandListWhereUniqueInput } from "../../demandList/base/DemandListWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { PurchaseItemCreateNestedManyWithoutPurchasesInput } from "./PurchaseItemCreateNestedManyWithoutPurchasesInput";
import { SupplierPaymentCreateNestedManyWithoutPurchasesInput } from "./SupplierPaymentCreateNestedManyWithoutPurchasesInput";
import { SupplierWhereUniqueInput } from "../../supplier/base/SupplierWhereUniqueInput";

@InputType()
class PurchaseCreateInput {
  @ApiProperty({
    required: true,
    type: () => DemandListWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DemandListWhereUniqueInput)
  @Field(() => DemandListWhereUniqueInput)
  demandList!: DemandListWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseItemCreateNestedManyWithoutPurchasesInput,
  })
  @ValidateNested()
  @Type(() => PurchaseItemCreateNestedManyWithoutPurchasesInput)
  @IsOptional()
  @Field(() => PurchaseItemCreateNestedManyWithoutPurchasesInput, {
    nullable: true,
  })
  items?: PurchaseItemCreateNestedManyWithoutPurchasesInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Number)
  paidAmount!: number;

  @ApiProperty({
    required: false,
    type: () => SupplierPaymentCreateNestedManyWithoutPurchasesInput,
  })
  @ValidateNested()
  @Type(() => SupplierPaymentCreateNestedManyWithoutPurchasesInput)
  @IsOptional()
  @Field(() => SupplierPaymentCreateNestedManyWithoutPurchasesInput, {
    nullable: true,
  })
  payments?: SupplierPaymentCreateNestedManyWithoutPurchasesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  purchaseNumber!: string;

  @ApiProperty({
    required: true,
    type: () => SupplierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SupplierWhereUniqueInput)
  @Field(() => SupplierWhereUniqueInput)
  supplier!: SupplierWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Number)
  totalAmount!: number;
}

export { PurchaseCreateInput as PurchaseCreateInput };
