/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Max,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { DemandListWhereUniqueInput } from "../../demandList/base/DemandListWhereUniqueInput";
import { Type } from "class-transformer";
import { OrderItemWhereUniqueInput } from "../../orderItem/base/OrderItemWhereUniqueInput";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { PurchaseItemWhereUniqueInput } from "../../purchaseItem/base/PurchaseItemWhereUniqueInput";
import { EnumDemandListItemStatus } from "./EnumDemandListItemStatus";

@InputType()
class DemandListItemUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  confirmedQuantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => DemandListWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DemandListWhereUniqueInput)
  @IsOptional()
  @Field(() => DemandListWhereUniqueInput, {
    nullable: true,
  })
  demandList?: DemandListWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OrderItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderItemWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderItemWhereUniqueInput, {
    nullable: true,
  })
  orderItem?: OrderItemWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PurchaseItemWhereUniqueInput)
  @IsOptional()
  @Field(() => PurchaseItemWhereUniqueInput, {
    nullable: true,
  })
  purchaseItem?: PurchaseItemWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  requestedQuantity?: number;

  @ApiProperty({
    required: false,
    enum: EnumDemandListItemStatus,
  })
  @IsEnum(EnumDemandListItemStatus)
  @IsOptional()
  @Field(() => EnumDemandListItemStatus, {
    nullable: true,
  })
  status?:
    | "PENDING"
    | "CONFIRMED"
    | "UNAVAILABLE"
    | "TRANSFERRED"
    | "PURCHASED"
    | "CANCELLED";
}

export { DemandListItemUpdateInput as DemandListItemUpdateInput };
