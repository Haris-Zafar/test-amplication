/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Max,
  IsOptional,
  IsDate,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DemandList } from "../../demandList/base/DemandList";
import { OrderItem } from "../../orderItem/base/OrderItem";
import { Product } from "../../product/base/Product";
import { PurchaseItem } from "../../purchaseItem/base/PurchaseItem";
import { EnumDemandListItemStatus } from "./EnumDemandListItemStatus";

@ObjectType()
class DemandListItem {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  confirmedQuantity!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: () => DemandList,
  })
  @ValidateNested()
  @Type(() => DemandList)
  demandList?: DemandList;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => OrderItem,
  })
  @ValidateNested()
  @Type(() => OrderItem)
  @IsOptional()
  orderItem?: OrderItem | null;

  @ApiProperty({
    required: true,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  product?: Product;

  @ApiProperty({
    required: false,
    type: () => PurchaseItem,
  })
  @ValidateNested()
  @Type(() => PurchaseItem)
  @IsOptional()
  purchaseItem?: PurchaseItem | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  requestedQuantity!: number;

  @ApiProperty({
    required: true,
    enum: EnumDemandListItemStatus,
  })
  @IsEnum(EnumDemandListItemStatus)
  @Field(() => EnumDemandListItemStatus, {
    nullable: true,
  })
  status?:
    | "PENDING"
    | "CONFIRMED"
    | "UNAVAILABLE"
    | "TRANSFERRED"
    | "PURCHASED"
    | "CANCELLED";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { DemandListItem as DemandListItem };
