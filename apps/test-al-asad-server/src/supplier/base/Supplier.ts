/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsDate,
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { DemandList } from "../../demandList/base/DemandList";
import { SupplierPayment } from "../../supplierPayment/base/SupplierPayment";
import { Purchase } from "../../purchase/base/Purchase";
import { SupplierProduct } from "../../supplierProduct/base/SupplierProduct";

@ObjectType()
class Supplier {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  address!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  contactPerson!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [DemandList],
  })
  @ValidateNested()
  @Type(() => DemandList)
  @IsOptional()
  demandLists?: Array<DemandList>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [SupplierPayment],
  })
  @ValidateNested()
  @Type(() => SupplierPayment)
  @IsOptional()
  payments?: Array<SupplierPayment>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  phone!: string;

  @ApiProperty({
    required: false,
    type: () => [Purchase],
  })
  @ValidateNested()
  @Type(() => Purchase)
  @IsOptional()
  purchases?: Array<Purchase>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  reliabilityScore!: number | null;

  @ApiProperty({
    required: false,
    type: () => [SupplierProduct],
  })
  @ValidateNested()
  @Type(() => SupplierProduct)
  @IsOptional()
  supplierProducts?: Array<SupplierProduct>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Supplier as Supplier };
