/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsNumber,
  Max,
  IsString,
  ValidateNested,
  IsOptional,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DemandListItem } from "../../demandListItem/base/DemandListItem";
import { Purchase } from "../../purchase/base/Purchase";
import { EnumDemandListStatus } from "./EnumDemandListStatus";
import { Supplier } from "../../supplier/base/Supplier";

@ObjectType()
class DemandList {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  demandDate!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Number)
  estimatedCost!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [DemandListItem],
  })
  @ValidateNested()
  @Type(() => DemandListItem)
  @IsOptional()
  items?: Array<DemandListItem>;

  @ApiProperty({
    required: false,
    type: () => Purchase,
  })
  @ValidateNested()
  @Type(() => Purchase)
  @IsOptional()
  purchase?: Purchase | null;

  @ApiProperty({
    required: true,
    enum: EnumDemandListStatus,
  })
  @IsEnum(EnumDemandListStatus)
  @Field(() => EnumDemandListStatus, {
    nullable: true,
  })
  status?:
    | "DRAFT"
    | "SUBMITTED"
    | "CONFIRMED"
    | "PARTIAL"
    | "COMPLETE"
    | "CANCELLED";

  @ApiProperty({
    required: true,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  supplier?: Supplier;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { DemandList as DemandList };
