/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsBoolean,
  IsDate,
  IsString,
  IsOptional,
  ValidateNested,
  IsNumber,
  Max,
  MaxLength,
} from "class-validator";

import { Type } from "class-transformer";
import { Product } from "../../product/base/Product";
import { PurchaseItem } from "../../purchaseItem/base/PurchaseItem";
import { Supplier } from "../../supplier/base/Supplier";

@ObjectType()
class SupplierProduct {
  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  availability!: boolean;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastPurchaseDate!: Date | null;

  @ApiProperty({
    required: true,
    type: () => Product,
  })
  @ValidateNested()
  @Type(() => Product)
  product?: Product;

  @ApiProperty({
    required: false,
    type: () => [PurchaseItem],
  })
  @ValidateNested()
  @Type(() => PurchaseItem)
  @IsOptional()
  purchaseItems?: Array<PurchaseItem>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Number)
  purchasePrice!: number;

  @ApiProperty({
    required: true,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  supplier?: Supplier;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  supplierSku!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { SupplierProduct as SupplierProduct };
