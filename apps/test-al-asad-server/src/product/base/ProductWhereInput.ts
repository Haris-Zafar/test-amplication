/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CompanyWhereUniqueInput } from "../../company/base/CompanyWhereUniqueInput";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { CustomerProductPriceListRelationFilter } from "../../customerProductPrice/base/CustomerProductPriceListRelationFilter";
import { DemandListItemListRelationFilter } from "../../demandListItem/base/DemandListItemListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { OrderItemListRelationFilter } from "../../orderItem/base/OrderItemListRelationFilter";
import { PurchaseItemListRelationFilter } from "../../purchaseItem/base/PurchaseItemListRelationFilter";
import { FloatFilter } from "../../util/FloatFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { IntFilter } from "../../util/IntFilter";
import { SupplierProductListRelationFilter } from "../../supplierProduct/base/SupplierProductListRelationFilter";
import { TagsOnProductListRelationFilter } from "../../tagsOnProduct/base/TagsOnProductListRelationFilter";
import { EnumProductWeightUnit } from "./EnumProductWeightUnit";

@InputType()
class ProductWhereInput {
  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CompanyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyWhereUniqueInput, {
    nullable: true,
  })
  company?: CompanyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => CustomerProductPriceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CustomerProductPriceListRelationFilter)
  @IsOptional()
  @Field(() => CustomerProductPriceListRelationFilter, {
    nullable: true,
  })
  customerPrices?: CustomerProductPriceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DemandListItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DemandListItemListRelationFilter)
  @IsOptional()
  @Field(() => DemandListItemListRelationFilter, {
    nullable: true,
  })
  demandListItem?: DemandListItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  expiryDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrderItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderItemListRelationFilter)
  @IsOptional()
  @Field(() => OrderItemListRelationFilter, {
    nullable: true,
  })
  orderItems?: OrderItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PurchaseItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PurchaseItemListRelationFilter)
  @IsOptional()
  @Field(() => PurchaseItemListRelationFilter, {
    nullable: true,
  })
  purchaseItem?: PurchaseItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  purchasePrice?: FloatFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  reorderLevel?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  retailPrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  sellPrice?: FloatFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  size?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  sku?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  stockQuantity?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => SupplierProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SupplierProductListRelationFilter)
  @IsOptional()
  @Field(() => SupplierProductListRelationFilter, {
    nullable: true,
  })
  supplierProducts?: SupplierProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagsOnProductListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagsOnProductListRelationFilter)
  @IsOptional()
  @Field(() => TagsOnProductListRelationFilter, {
    nullable: true,
  })
  tags?: TagsOnProductListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  weight?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumProductWeightUnit,
  })
  @IsEnum(EnumProductWeightUnit)
  @IsOptional()
  @Field(() => EnumProductWeightUnit, {
    nullable: true,
  })
  weightUnit?: "G" | "ML" | "KG" | "L";
}

export { ProductWhereInput as ProductWhereInput };
