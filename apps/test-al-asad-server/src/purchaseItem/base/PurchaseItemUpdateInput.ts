/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DemandListItemWhereUniqueInput } from "../../demandListItem/base/DemandListItemWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Max,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { PurchaseWhereUniqueInput } from "../../purchase/base/PurchaseWhereUniqueInput";
import { SupplierProductWhereUniqueInput } from "../../supplierProduct/base/SupplierProductWhereUniqueInput";

@InputType()
class PurchaseItemUpdateInput {
  @ApiProperty({
    required: false,
    type: () => DemandListItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DemandListItemWhereUniqueInput)
  @IsOptional()
  @Field(() => DemandListItemWhereUniqueInput, {
    nullable: true,
  })
  demandListItem?: DemandListItemWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PurchaseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PurchaseWhereUniqueInput)
  @IsOptional()
  @Field(() => PurchaseWhereUniqueInput, {
    nullable: true,
  })
  purchase?: PurchaseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  purchasePrice?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quantity?: number;

  @ApiProperty({
    required: false,
    type: () => SupplierProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SupplierProductWhereUniqueInput)
  @IsOptional()
  @Field(() => SupplierProductWhereUniqueInput, {
    nullable: true,
  })
  supplierProduct?: SupplierProductWhereUniqueInput;
}

export { PurchaseItemUpdateInput as PurchaseItemUpdateInput };
