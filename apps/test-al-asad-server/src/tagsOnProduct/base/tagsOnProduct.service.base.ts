/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  TagsOnProduct as PrismaTagsOnProduct,
  Product as PrismaProduct,
  Tag as PrismaTag,
} from "@prisma/client";

export class TagsOnProductServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TagsOnProductCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tagsOnProduct.count(args);
  }

  async tagsOnProducts(
    args: Prisma.TagsOnProductFindManyArgs
  ): Promise<PrismaTagsOnProduct[]> {
    return this.prisma.tagsOnProduct.findMany(args);
  }
  async tagsOnProduct(
    args: Prisma.TagsOnProductFindUniqueArgs
  ): Promise<PrismaTagsOnProduct | null> {
    return this.prisma.tagsOnProduct.findUnique(args);
  }
  async createTagsOnProduct(
    args: Prisma.TagsOnProductCreateArgs
  ): Promise<PrismaTagsOnProduct> {
    return this.prisma.tagsOnProduct.create(args);
  }
  async updateTagsOnProduct(
    args: Prisma.TagsOnProductUpdateArgs
  ): Promise<PrismaTagsOnProduct> {
    return this.prisma.tagsOnProduct.update(args);
  }
  async deleteTagsOnProduct(
    args: Prisma.TagsOnProductDeleteArgs
  ): Promise<PrismaTagsOnProduct> {
    return this.prisma.tagsOnProduct.delete(args);
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.tagsOnProduct
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }

  async getTag(parentId: string): Promise<PrismaTag | null> {
    return this.prisma.tagsOnProduct
      .findUnique({
        where: { id: parentId },
      })
      .tag();
  }
}
