/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SupplierPayment as PrismaSupplierPayment,
  Purchase as PrismaPurchase,
  Supplier as PrismaSupplier,
} from "@prisma/client";

export class SupplierPaymentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SupplierPaymentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.supplierPayment.count(args);
  }

  async supplierPayments(
    args: Prisma.SupplierPaymentFindManyArgs
  ): Promise<PrismaSupplierPayment[]> {
    return this.prisma.supplierPayment.findMany(args);
  }
  async supplierPayment(
    args: Prisma.SupplierPaymentFindUniqueArgs
  ): Promise<PrismaSupplierPayment | null> {
    return this.prisma.supplierPayment.findUnique(args);
  }
  async createSupplierPayment(
    args: Prisma.SupplierPaymentCreateArgs
  ): Promise<PrismaSupplierPayment> {
    return this.prisma.supplierPayment.create(args);
  }
  async updateSupplierPayment(
    args: Prisma.SupplierPaymentUpdateArgs
  ): Promise<PrismaSupplierPayment> {
    return this.prisma.supplierPayment.update(args);
  }
  async deleteSupplierPayment(
    args: Prisma.SupplierPaymentDeleteArgs
  ): Promise<PrismaSupplierPayment> {
    return this.prisma.supplierPayment.delete(args);
  }

  async getPurchase(parentId: string): Promise<PrismaPurchase | null> {
    return this.prisma.supplierPayment
      .findUnique({
        where: { id: parentId },
      })
      .purchase();
  }

  async getSupplier(parentId: string): Promise<PrismaSupplier | null> {
    return this.prisma.supplierPayment
      .findUnique({
        where: { id: parentId },
      })
      .supplier();
  }
}
